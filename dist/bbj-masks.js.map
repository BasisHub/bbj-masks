{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7ef38b28e0bb17606637","webpack:///./src/modules/DateMask.js","webpack:///./src/modules/NumberMask.js","webpack:///./src/index.js","webpack:///./src/modules/Types.js"],"names":["DateMask","date","mask","dateDetails","_parseDate","translations","_buildTransilation","result","k","replace","RegExp","dateObject","Date","parse","hours24","getHours","hours12","dayOfYear","_getDayOfYear","getFullYear","getMonth","getDate","getMinutes","getSeconds","getDay","year","toString","substr","String","fromCharCode","month","length","day","minutes","seconds","dayOfWeek","now","start","diff","getTimezoneOffset","oneDay","Math","floor","NumberMask","number","groupingSeparator","decimalSeparator","maskLength","maskBeforeDecimal","maskAfterDecimal","foundDecimal","i","m","charAt","num","_round","digits","_toCharArray","numLen","numBeforeDecimal","numAfterDecimal","isNegative","_getSign","emitDecimal","indexOf","foundZero","currency","buffer","numPos","maskPos","p_mask","precision","reverseShift","numArray","split","_shift","round","signum","chars","string","substring","x","Types"],"mappings":"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","file":"bbj-masks.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Masks\"] = factory();\n\telse\n\t\troot[\"BBj\"] = root[\"BBj\"] || {}, root[\"BBj\"][\"Masks\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7ef38b28e0bb17606637","/*\n * This file is part of bbj-masks lib.\n * (c) Basis Europe <eu@basis.com>\n * \n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n \n/** \n * DateMask\n * \n * Handle BBj dates masking \n * \n * @author Hyyan Abo Fakher <habofakher@basis.com>\n*/\nexport default class DateMask {\n\n  /** \n   * Mask date\n   * \n   * Mask the passed date with the passed mask\n   * \n   * @param {String} date date as a string\n   * @param {String} mask mask as a string\n   * \n   * @return {String} a date masked witht the given mask\n   */\n  static mask(date, mask) {\n\n    if (!date) return;\n    if (!mask) return date;\n\n    const dateDetails = DateMask._parseDate(date);\n    const translations = DateMask._buildTransilation(dateDetails);\n\n    let result = mask;\n    for (var k in translations) {\n      result = result.replace(\n        new RegExp('(%' + k + ')', 'g'),\n        translations[k]\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Parse the passed date string adn return its detilas\n   * \n   * @param {String} date date as a string\n   * \n   * @return {Object} \n   */\n  static _parseDate(date) {\n\n    let dateObject = Date.parse(date);\n    if (!(dateObject instanceof Date)) dateObject = new Date(date);\n\n    const hours24 = dateObject.getHours();\n    let hours12 = (hours24 % 12) || 12;\n\n    const dayOfYear = DateMask._getDayOfYear(date);\n    // const dayOfWeek = dateObject.getDay() ?\n\n    return {\n      \"year\": dateObject.getFullYear(),\n      \"month\": dateObject.getMonth() + 1,\n      \"day\": dateObject.getDate(),\n      \"minutes\": dateObject.getMinutes(),\n      \"seconds\": dateObject.getSeconds(),\n      \"hours24\": hours24,\n      \"hours12\": hours12,\n      \"dayOfYear\": dayOfYear,\n      \"dayOfWeek\": dateObject.getDay() + 1  // Sunday = 1 in BBj but Sunday = 0 in JS\n    };\n  }\n\n  /**\n   * Get a map object which contains all possible forms of masks\n   * \n   * @param {Object} dateDetails date details built by `_parseDate`\n   * \n   * @return {Object} forms masks\n   */\n  static _buildTransilation(dateDetails) {\n\n    return {\n\n      // year \n      \"Yz\": dateDetails.year.toString().substr(-2),\n      \"Ys\": dateDetails.year,\n      \"Yl\": dateDetails.year,\n      \"Yp\": String.fromCharCode(dateDetails.year),\n      \"Yd\": dateDetails.year,\n      \"Y\": dateDetails.year,\n\n      // month\n      \"Mz\": String(dateDetails.month).length == 1 ? \"0\" + dateDetails.month : dateDetails.month,\n      \"Ms\": dateDetails.month,\n      \"Ml\": dateDetails.month,\n      \"Mp\": String.fromCharCode(dateDetails.month),\n      \"Md\": dateDetails.month,\n      \"M\": dateDetails.month,\n\n      // day\n      \"Dz\": String(dateDetails.day).length == 1 ? \"0\" + dateDetails.day : dateDetails.day,\n      \"Ds\": dateDetails.day,\n      \"Dl\": dateDetails.day,\n      \"Dp\": String.fromCharCode(dateDetails.day),\n      \"Dd\": dateDetails.day,\n      \"D\": dateDetails.day,\n\n      // hour 24\n      \"Hz\": String(dateDetails.hours24).length == 1 ? \"0\" + dateDetails.hours24 : dateDetails.hours24,\n      \"Hs\": dateDetails.hours24,\n      \"Hl\": dateDetails.hours24,\n      \"Hp\": String.fromCharCode(dateDetails.hours24),\n      \"Hd\": dateDetails.hours24,\n      \"H\": dateDetails.hours24,\n\n      // hour 12\n      \"hz\": String(dateDetails.hours12).length == 1 ? \"0\" + dateDetails.hours12 : dateDetails.hours12,\n      \"hs\": dateDetails.hours12,\n      \"hl\": dateDetails.hours12,\n      \"hp\": String.fromCharCode(dateDetails.hours12),\n      \"hd\": dateDetails.hours12,\n      \"h\": dateDetails.hours12,\n\n      // minutes\n      \"mz\": String(dateDetails.minutes).length == 1 ? \"0\" + dateDetails.minutes : dateDetails.minutes,\n      \"ms\": dateDetails.minutes,\n      \"ml\": dateDetails.minutes,\n      \"mp\": String.fromCharCode(dateDetails.minutes),\n      \"md\": dateDetails.minutes,\n      \"m\": dateDetails.minutes,\n\n      // seconds\n      \"sz\": String(dateDetails.seconds).length == 1 ? \"0\" + dateDetails.seconds : dateDetails.seconds,\n      \"ss\": dateDetails.seconds,\n      \"sl\": dateDetails.seconds,\n      \"sp\": String.fromCharCode(dateDetails.seconds),\n      \"sd\": dateDetails.seconds,\n      \"s\": dateDetails.seconds,\n\n      // AM , PM\n      \"PP\": dateDetails.hours24 > 12 ? \"PM\" : \"PM\",\n      \"P\": dateDetails.hours24 > 12 ? \"PM\" : \"AM\",\n      \"pp\": dateDetails.hours24 > 12 ? \"pm\" : \"am\",\n      \"p\": dateDetails.hours24 > 12 ? \"pm\" : \"am\",\n\n      // Day of Year\n      \"Jz\": String(dateDetails.dayOfYear).length == 1 ? \"0\" + dateDetails.dayOfYear : dateDetails.dayOfYear,\n      \"Js\": dateDetails.dayOfYear,\n      \"Jl\": dateDetails.dayOfYear,\n      \"Jd\": dateDetails.dayOfYear,\n      \"J\": dateDetails.dayOfYear,\n\n      // Day Of Week \n      \"Wz\": String(dateDetails.dayOfWeek).length == 1 ? \"0\" + dateDetails.dayOfWeek : dateDetails.dayOfWeek,\n      \"Ws\": dateDetails.dayOfWeek,\n      \"Wl\": dateDetails.dayOfWeek,\n      \"Wp\": String.fromCharCode(dateDetails.dayOfWeek),\n      \"Wd\": dateDetails.dayOfWeek,\n      \"W\": dateDetails.dayOfWeek,\n    };\n  }\n\n  /**\n   * Get the Day number within the year (1-366).\n   * \n   * @param {String} date date as a string\n   * \n   * @returns {Number}\n   */\n  static _getDayOfYear(date) {\n\n    let now = Date.parse(date);\n    if (!(now instanceof Date)) now = new Date(date);\n\n    const start = new Date(now.getFullYear(), 0, 0);\n\n    var diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);\n    var oneDay = 1000 * 60 * 60 * 24;\n    var day = Math.floor(diff / oneDay);\n\n    return day;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/DateMask.js","/*\r\n * This file is part of bbj-masks lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n * \r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\n/** \r\n * NumberMask\r\n * \r\n * Handle BBj numbers masking \r\n * \r\n * @author Hyyan Abo Fakher <habofakher@basis.com>\r\n*/\r\nexport default class NumberMask {\r\n\r\n  /**\r\n   * Mask the given number with the given mask according to BBj rules\r\n   * \r\n   * @param {Number} number the number to format\r\n   * @param {String} mask the mask to use for formatting\r\n   * @param {String} groupingSeparator a char which will be used as a grouping separator\r\n   * @param {String} decimalSeparator a char which will be used as a decimal separator\r\n   * \r\n   * @returns {String} the masked number\r\n   */\r\n  static mask(number, mask, groupingSeparator = ',', decimalSeparator = '.') {\r\n\r\n    const maskLength = mask.length;\r\n    if (0 === maskLength) return number;\r\n\r\n    // Get magnitude and precision of MASK\r\n    let maskBeforeDecimal = 0;\r\n    let maskAfterDecimal = 0;\r\n    let foundDecimal = false;\r\n    for (let i = 0; i < maskLength; ++i) {\r\n      const m = mask.charAt(i);\r\n      if (m == '0' || m == '#') {\r\n        if (foundDecimal)++maskAfterDecimal;\r\n        else ++maskBeforeDecimal;\r\n      } else if (m == '.') foundDecimal = true;\r\n    }\r\n\r\n    let num = NumberMask._round(number, maskAfterDecimal);\r\n    let digits = NumberMask._toCharArray(num);\r\n\r\n    // Get magnitude and precision of NUMBER\r\n    let numLen = digits.length;\r\n    let numBeforeDecimal = 0;\r\n    let numAfterDecimal = 0;\r\n    foundDecimal = false;\r\n    for (let i = 0; i < numLen; i++) {\r\n      if (digits[i] == '.') foundDecimal = true;\r\n      else {\r\n        if (foundDecimal)++numAfterDecimal;\r\n        else ++numBeforeDecimal;\r\n      }\r\n    }\r\n\r\n    // always ignore mask overflow\r\n    if (numBeforeDecimal > maskBeforeDecimal) return number.toString();\r\n\r\n    // round if mask is for a lower precision number\r\n    if (numAfterDecimal > maskAfterDecimal) {\r\n\r\n      num = NumberMask._round(num, maskAfterDecimal);\r\n      digits = NumberMask._toCharArray(num);\r\n      numLen = digits.length;\r\n\r\n      // Get new magnitude and precision of NUMBER\r\n      numBeforeDecimal = 0;\r\n      numAfterDecimal = 0;\r\n      foundDecimal = false;\r\n      for (let i = 0; i < numLen; i++) {\r\n        if (digits[i] == '.') foundDecimal = true;\r\n        else {\r\n          if (foundDecimal)++numAfterDecimal;\r\n          else ++numBeforeDecimal;\r\n        }\r\n      }\r\n\r\n      // always ignore mask overflow\r\n      if (numBeforeDecimal > maskBeforeDecimal) {\r\n        return number.toString();\r\n      }\r\n    }\r\n\r\n    const isNegative = NumberMask._getSign(num) === -1;\r\n    let emitDecimal = numLen > 0 || mask.indexOf('0') >= 0;\r\n    let foundZero = false;\r\n    let currency = false;\r\n    let buffer = '';\r\n    foundDecimal = false;\r\n\r\n    for (let numPos = 0, maskPos = 0; maskPos < maskLength; maskPos++) {\r\n\r\n      let m = mask.charAt(maskPos);\r\n      switch (m) {\r\n        case '0':\r\n          --maskBeforeDecimal;\r\n          if (maskBeforeDecimal < numBeforeDecimal && numPos < numLen) {\r\n            buffer += digits[numPos];\r\n            ++numPos;\r\n          }\r\n          else {\r\n            buffer += '0';\r\n            foundZero = true;\r\n          }\r\n          break;\r\n\r\n        case '#':\r\n          --maskBeforeDecimal;\r\n          if (maskBeforeDecimal < numBeforeDecimal && numPos < numLen) {\r\n            buffer += digits[numPos];\r\n            ++numPos;\r\n          }\r\n          else {\r\n            if (foundDecimal) buffer += '0';\r\n          }\r\n          break;\r\n\r\n        case ',':\r\n          if (foundZero || numPos > 0) buffer += groupingSeparator;\r\n          break;\r\n\r\n        case '-':\r\n        case '(':\r\n        case ')':\r\n          if (isNegative) buffer += m;\r\n          break;\r\n\r\n        case '+':\r\n          buffer += isNegative ? '-' : '+';\r\n          break;\r\n\r\n        case '.':\r\n          if (foundDecimal) buffer += m;\r\n          else {\r\n            if (emitDecimal) buffer += decimalSeparator;\r\n            foundDecimal = true;\r\n            ++numPos;\r\n          }\r\n          break;\r\n\r\n        case 'C':\r\n          if (maskPos < maskLength - 1 && mask.charAt(maskPos + 1) == 'R') {\r\n            if (isNegative) buffer += 'CR';\r\n            ++maskPos;\r\n          } else buffer += m;\r\n          break;\r\n\r\n        case 'D':\r\n          if (maskPos < maskLength - 1 && p_mask.charAt(maskPos + 1) == 'R') {\r\n            buffer += isNegative ? \"CR\" : \"DR\";\r\n            ++maskPos;\r\n          } else buffer += m;\r\n          break;\r\n\r\n        case 'B':\r\n          buffer += ' ';\r\n          break;\r\n\r\n        default:\r\n          buffer += m;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  }\r\n\r\n  static _shift(number, precision, reverseShift) {\r\n\r\n    if (reverseShift) precision = -precision;\r\n    var numArray = (\"\" + number).split(\"e\");\r\n    return +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\r\n  }\r\n\r\n  static _round(number, precision) {\r\n\r\n    return NumberMask._shift(\r\n      Math.round(NumberMask._shift(number, precision, false)),\r\n      precision,\r\n      true\r\n    );\r\n  }\r\n\r\n  static _toCharArray(number) {\r\n\r\n    const signum = NumberMask._getSign(number);\r\n    let chars = [];\r\n\r\n    if (signum !== 0) {\r\n\r\n      let string = signum < 0 ?\r\n        `${-1 * number.toString()}`\r\n        : number.toString();\r\n\r\n      if (string.length > 1 && string.charAt(0) == '0')\r\n        string = string.substring(1);\r\n\r\n      // The string contains only [0-9] and '.'\r\n      chars = (string).split('');\r\n    }\r\n\r\n    return chars;\r\n  }\r\n\r\n  /**\r\n   * Returns the sign of a number\r\n   * \r\n   * @param {Number} x number\r\n   * @returns {Number} A number representing the sign of the given argument. \r\n   *                   If the argument is a positive number, negative number, positive zero \r\n   *                   or negative zero, the function will return 1, -1, 0 or -0 respectively.\r\n   *                   Otherwise, NaN is returned.\r\n   */\r\n  static _getSign(x) {\r\n    return ((x > 0) - (x < 0)) || +x;\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/NumberMask.js","/*\n * This file is part of bbj-masks lib.\n * (c) Basis Europe <eu@basis.com>\n * \n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport {default as DateMask} from \"./modules/DateMask.js\";\nexport {default as NumberMask} from \"./modules/NumberMask.js\";\nexport {default as Types} from \"./modules/Types.js\";\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\r\n * This file is part of bbj-masks lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n * \r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport NumberMask from './NumberMask.js';\r\nimport DateMask from './DateMask.js';\r\n\r\n/** \r\n * Types\r\n * \r\n * Handle BBj masking \r\n * \r\n * @author Hyyan Abo Fakher <habofakher@basis.com>\r\n*/\r\nexport default class Types {\r\n\r\n  /**\r\n   * Mask a number according to bbj masking rules \r\n   * \r\n   * @param {Number} number the number to format\r\n   * @param {String} mask the mask to use \r\n   * @param {String} groupingSeparator a char which will be used as a grouping separator\r\n   * @param {String} decimalSeparator a char which will be used as a decimal separator\r\n   * \r\n   * @return {String} number masked with the given mask\r\n   */\r\n  static number(number, mask, groupingSeparator = ',', decimalSeparator = '.') {\r\n    return NumberMask.mask(number, mask);\r\n  }\r\n\r\n  /**\r\n   * Mask a date according to bbj masking rules \r\n   * \r\n   * @param {String} number the date to format\r\n   * @param {String} mask the mask to use \r\n   * \r\n   * @return {String} number masked with the given mask\r\n   */\r\n  static date(date, mask) {\r\n    return DateMask.mask(date, mask);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Types.js"],"sourceRoot":""}